/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.educates.training;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V1beta1WorkshopSpecPublishFiles
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-30T19:16:04.060Z[Etc/UTC]")
public class V1beta1WorkshopSpecPublishFiles {
  public static final String SERIALIZED_NAME_DIRECTORY = "directory";
  @SerializedName(SERIALIZED_NAME_DIRECTORY)
  private Object directory;

  public static final String SERIALIZED_NAME_EXCLUDE_PATHS = "excludePaths";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_PATHS)
  private List<String> excludePaths = null;

  public static final String SERIALIZED_NAME_GIT = "git";
  @SerializedName(SERIALIZED_NAME_GIT)
  private Object git;

  public static final String SERIALIZED_NAME_GITHUB_RELEASE = "githubRelease";
  @SerializedName(SERIALIZED_NAME_GITHUB_RELEASE)
  private Object githubRelease;

  public static final String SERIALIZED_NAME_HELM_CHART = "helmChart";
  @SerializedName(SERIALIZED_NAME_HELM_CHART)
  private Object helmChart;

  public static final String SERIALIZED_NAME_HG = "hg";
  @SerializedName(SERIALIZED_NAME_HG)
  private Object hg;

  public static final String SERIALIZED_NAME_HTTP = "http";
  @SerializedName(SERIALIZED_NAME_HTTP)
  private Object http;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private Object image;

  public static final String SERIALIZED_NAME_IMGPKG_BUNDLE = "imgpkgBundle";
  @SerializedName(SERIALIZED_NAME_IMGPKG_BUNDLE)
  private Object imgpkgBundle;

  public static final String SERIALIZED_NAME_INCLUDE_PATHS = "includePaths";
  @SerializedName(SERIALIZED_NAME_INCLUDE_PATHS)
  private List<String> includePaths = null;

  public static final String SERIALIZED_NAME_LEGAL_PATHS = "legalPaths";
  @SerializedName(SERIALIZED_NAME_LEGAL_PATHS)
  private List<String> legalPaths = null;

  public static final String SERIALIZED_NAME_NEW_ROOT_PATH = "newRootPath";
  @SerializedName(SERIALIZED_NAME_NEW_ROOT_PATH)
  private String newRootPath;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;


  public V1beta1WorkshopSpecPublishFiles directory(Object directory) {
    
    this.directory = directory;
    return this;
  }

   /**
   * Get directory
   * @return directory
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDirectory() {
    return directory;
  }


  public void setDirectory(Object directory) {
    this.directory = directory;
  }


  public V1beta1WorkshopSpecPublishFiles excludePaths(List<String> excludePaths) {
    
    this.excludePaths = excludePaths;
    return this;
  }

  public V1beta1WorkshopSpecPublishFiles addExcludePathsItem(String excludePathsItem) {
    if (this.excludePaths == null) {
      this.excludePaths = new ArrayList<>();
    }
    this.excludePaths.add(excludePathsItem);
    return this;
  }

   /**
   * Get excludePaths
   * @return excludePaths
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getExcludePaths() {
    return excludePaths;
  }


  public void setExcludePaths(List<String> excludePaths) {
    this.excludePaths = excludePaths;
  }


  public V1beta1WorkshopSpecPublishFiles git(Object git) {
    
    this.git = git;
    return this;
  }

   /**
   * Get git
   * @return git
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getGit() {
    return git;
  }


  public void setGit(Object git) {
    this.git = git;
  }


  public V1beta1WorkshopSpecPublishFiles githubRelease(Object githubRelease) {
    
    this.githubRelease = githubRelease;
    return this;
  }

   /**
   * Get githubRelease
   * @return githubRelease
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getGithubRelease() {
    return githubRelease;
  }


  public void setGithubRelease(Object githubRelease) {
    this.githubRelease = githubRelease;
  }


  public V1beta1WorkshopSpecPublishFiles helmChart(Object helmChart) {
    
    this.helmChart = helmChart;
    return this;
  }

   /**
   * Get helmChart
   * @return helmChart
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getHelmChart() {
    return helmChart;
  }


  public void setHelmChart(Object helmChart) {
    this.helmChart = helmChart;
  }


  public V1beta1WorkshopSpecPublishFiles hg(Object hg) {
    
    this.hg = hg;
    return this;
  }

   /**
   * Get hg
   * @return hg
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getHg() {
    return hg;
  }


  public void setHg(Object hg) {
    this.hg = hg;
  }


  public V1beta1WorkshopSpecPublishFiles http(Object http) {
    
    this.http = http;
    return this;
  }

   /**
   * Get http
   * @return http
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getHttp() {
    return http;
  }


  public void setHttp(Object http) {
    this.http = http;
  }


  public V1beta1WorkshopSpecPublishFiles image(Object image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getImage() {
    return image;
  }


  public void setImage(Object image) {
    this.image = image;
  }


  public V1beta1WorkshopSpecPublishFiles imgpkgBundle(Object imgpkgBundle) {
    
    this.imgpkgBundle = imgpkgBundle;
    return this;
  }

   /**
   * Get imgpkgBundle
   * @return imgpkgBundle
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getImgpkgBundle() {
    return imgpkgBundle;
  }


  public void setImgpkgBundle(Object imgpkgBundle) {
    this.imgpkgBundle = imgpkgBundle;
  }


  public V1beta1WorkshopSpecPublishFiles includePaths(List<String> includePaths) {
    
    this.includePaths = includePaths;
    return this;
  }

  public V1beta1WorkshopSpecPublishFiles addIncludePathsItem(String includePathsItem) {
    if (this.includePaths == null) {
      this.includePaths = new ArrayList<>();
    }
    this.includePaths.add(includePathsItem);
    return this;
  }

   /**
   * Get includePaths
   * @return includePaths
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIncludePaths() {
    return includePaths;
  }


  public void setIncludePaths(List<String> includePaths) {
    this.includePaths = includePaths;
  }


  public V1beta1WorkshopSpecPublishFiles legalPaths(List<String> legalPaths) {
    
    this.legalPaths = legalPaths;
    return this;
  }

  public V1beta1WorkshopSpecPublishFiles addLegalPathsItem(String legalPathsItem) {
    if (this.legalPaths == null) {
      this.legalPaths = new ArrayList<>();
    }
    this.legalPaths.add(legalPathsItem);
    return this;
  }

   /**
   * Get legalPaths
   * @return legalPaths
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getLegalPaths() {
    return legalPaths;
  }


  public void setLegalPaths(List<String> legalPaths) {
    this.legalPaths = legalPaths;
  }


  public V1beta1WorkshopSpecPublishFiles newRootPath(String newRootPath) {
    
    this.newRootPath = newRootPath;
    return this;
  }

   /**
   * Get newRootPath
   * @return newRootPath
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNewRootPath() {
    return newRootPath;
  }


  public void setNewRootPath(String newRootPath) {
    this.newRootPath = newRootPath;
  }


  public V1beta1WorkshopSpecPublishFiles path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPath() {
    return path;
  }


  public void setPath(String path) {
    this.path = path;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1beta1WorkshopSpecPublishFiles v1beta1WorkshopSpecPublishFiles = (V1beta1WorkshopSpecPublishFiles) o;
    return Objects.equals(this.directory, v1beta1WorkshopSpecPublishFiles.directory) &&
        Objects.equals(this.excludePaths, v1beta1WorkshopSpecPublishFiles.excludePaths) &&
        Objects.equals(this.git, v1beta1WorkshopSpecPublishFiles.git) &&
        Objects.equals(this.githubRelease, v1beta1WorkshopSpecPublishFiles.githubRelease) &&
        Objects.equals(this.helmChart, v1beta1WorkshopSpecPublishFiles.helmChart) &&
        Objects.equals(this.hg, v1beta1WorkshopSpecPublishFiles.hg) &&
        Objects.equals(this.http, v1beta1WorkshopSpecPublishFiles.http) &&
        Objects.equals(this.image, v1beta1WorkshopSpecPublishFiles.image) &&
        Objects.equals(this.imgpkgBundle, v1beta1WorkshopSpecPublishFiles.imgpkgBundle) &&
        Objects.equals(this.includePaths, v1beta1WorkshopSpecPublishFiles.includePaths) &&
        Objects.equals(this.legalPaths, v1beta1WorkshopSpecPublishFiles.legalPaths) &&
        Objects.equals(this.newRootPath, v1beta1WorkshopSpecPublishFiles.newRootPath) &&
        Objects.equals(this.path, v1beta1WorkshopSpecPublishFiles.path);
  }

  @Override
  public int hashCode() {
    return Objects.hash(directory, excludePaths, git, githubRelease, helmChart, hg, http, image, imgpkgBundle, includePaths, legalPaths, newRootPath, path);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1beta1WorkshopSpecPublishFiles {\n");
    sb.append("    directory: ").append(toIndentedString(directory)).append("\n");
    sb.append("    excludePaths: ").append(toIndentedString(excludePaths)).append("\n");
    sb.append("    git: ").append(toIndentedString(git)).append("\n");
    sb.append("    githubRelease: ").append(toIndentedString(githubRelease)).append("\n");
    sb.append("    helmChart: ").append(toIndentedString(helmChart)).append("\n");
    sb.append("    hg: ").append(toIndentedString(hg)).append("\n");
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imgpkgBundle: ").append(toIndentedString(imgpkgBundle)).append("\n");
    sb.append("    includePaths: ").append(toIndentedString(includePaths)).append("\n");
    sb.append("    legalPaths: ").append(toIndentedString(legalPaths)).append("\n");
    sb.append("    newRootPath: ").append(toIndentedString(newRootPath)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

