/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.educates.secrets;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import dev.educates.secrets.V1beta1SecretInjectorSpecServiceAccounts;
import dev.educates.secrets.V1beta1SecretInjectorSpecTargetNamespaces;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1beta1SecretInjectorSpecRules
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-30T17:36:32.479Z[Etc/UTC]")
public class V1beta1SecretInjectorSpecRules {
  public static final String SERIALIZED_NAME_SERVICE_ACCOUNTS = "serviceAccounts";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNTS)
  private V1beta1SecretInjectorSpecServiceAccounts serviceAccounts;

  public static final String SERIALIZED_NAME_SOURCE_SECRETS = "sourceSecrets";
  @SerializedName(SERIALIZED_NAME_SOURCE_SECRETS)
  private V1beta1SecretInjectorSpecServiceAccounts sourceSecrets;

  public static final String SERIALIZED_NAME_TARGET_NAMESPACES = "targetNamespaces";
  @SerializedName(SERIALIZED_NAME_TARGET_NAMESPACES)
  private V1beta1SecretInjectorSpecTargetNamespaces targetNamespaces;


  public V1beta1SecretInjectorSpecRules serviceAccounts(V1beta1SecretInjectorSpecServiceAccounts serviceAccounts) {
    
    this.serviceAccounts = serviceAccounts;
    return this;
  }

   /**
   * Get serviceAccounts
   * @return serviceAccounts
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta1SecretInjectorSpecServiceAccounts getServiceAccounts() {
    return serviceAccounts;
  }


  public void setServiceAccounts(V1beta1SecretInjectorSpecServiceAccounts serviceAccounts) {
    this.serviceAccounts = serviceAccounts;
  }


  public V1beta1SecretInjectorSpecRules sourceSecrets(V1beta1SecretInjectorSpecServiceAccounts sourceSecrets) {
    
    this.sourceSecrets = sourceSecrets;
    return this;
  }

   /**
   * Get sourceSecrets
   * @return sourceSecrets
  **/
  @ApiModelProperty(required = true, value = "")

  public V1beta1SecretInjectorSpecServiceAccounts getSourceSecrets() {
    return sourceSecrets;
  }


  public void setSourceSecrets(V1beta1SecretInjectorSpecServiceAccounts sourceSecrets) {
    this.sourceSecrets = sourceSecrets;
  }


  public V1beta1SecretInjectorSpecRules targetNamespaces(V1beta1SecretInjectorSpecTargetNamespaces targetNamespaces) {
    
    this.targetNamespaces = targetNamespaces;
    return this;
  }

   /**
   * Get targetNamespaces
   * @return targetNamespaces
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta1SecretInjectorSpecTargetNamespaces getTargetNamespaces() {
    return targetNamespaces;
  }


  public void setTargetNamespaces(V1beta1SecretInjectorSpecTargetNamespaces targetNamespaces) {
    this.targetNamespaces = targetNamespaces;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1beta1SecretInjectorSpecRules v1beta1SecretInjectorSpecRules = (V1beta1SecretInjectorSpecRules) o;
    return Objects.equals(this.serviceAccounts, v1beta1SecretInjectorSpecRules.serviceAccounts) &&
        Objects.equals(this.sourceSecrets, v1beta1SecretInjectorSpecRules.sourceSecrets) &&
        Objects.equals(this.targetNamespaces, v1beta1SecretInjectorSpecRules.targetNamespaces);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceAccounts, sourceSecrets, targetNamespaces);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1beta1SecretInjectorSpecRules {\n");
    sb.append("    serviceAccounts: ").append(toIndentedString(serviceAccounts)).append("\n");
    sb.append("    sourceSecrets: ").append(toIndentedString(sourceSecrets)).append("\n");
    sb.append("    targetNamespaces: ").append(toIndentedString(targetNamespaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

